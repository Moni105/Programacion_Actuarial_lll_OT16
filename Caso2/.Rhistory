ext <- x[which.max(x[,besthospital]), ]
} else{
ext <- x[num,]
}
Ext1 <- ext[order(as.numeric(ext$Hospital.Name)), ]
cat2 <- Ext1[1,2]
cat2
}
est <- c(est, estado)
Tabla <- data.frame("Hospital" = cat2, "Estado" = est)
Tabla
}
head(rankingcompleto("ataque", 20), 10)
rankingcompleto <- function(resultado, num = "mejor") {
# Lectura de datos
data <- read.csv("outcome-of-care-measures.csv")
# Revisión de la validez de estado y resultado
if (!((resultado == "ataque") | (resultado == "falla")
| (resultado == "neumonia"))) {
stop ("resultado invalido")
}
# Para cada estado, encuentra el hospital con la posición dada.
col <- if (resultado == "ataque") {
11 #columna de Heart Attack
} else if (resultado == "falla") {
17 #columna de Heart Failure
} else {
23 #columna de pneumonia
}
data[, col] <- suppressWarnings(as.numeric(levels(data[, col])[data[, col]]))
data[, 2] <- as.character(data[, 2])
resultadoFin <- vector() #Vector vacío para llenar luego
estados <- levels(data[, 7])
for(i in 1:length(estados)) {
DataEstado <- data[grep(estados[i], data$State), ]
Ordenar_Data <- DataEstado[order(DataEstado[, col], DataEstado[, 2], na.last = NA), ]
hospital <- if(num == "mejor") {
Ordenar_Data[1, 2]
} else if(num == "peor") {
Ordenar_Data[nrow(Ordenar_Data), 2]
} else{
Ordenar_Data[num, 2]
}
resultadoFin <- append(resultadoFin, c(hospital, estados[i]))
#append agrega elementos al vector que teniamos vacio al inincio
}
# Regresa un data frame con el nombre del hospital y la abreviatura
# del nombre del estado al que pertenece.
resultadoFin <- as.data.frame(matrix(resultadoFin, length(estados), 2, byrow = TRUE))
colnames(resultadoFin) <- c("hospital", "estado")
rownames(resultadoFin) <- estados
resultadoFin
}
rankingcompleto <- function(resultado, num = "mejor") {
# Lectura de datos
data <- read.csv("outcome-of-care-measures.csv")
# Revisión de la validez de estado y resultado
if (!((resultado == "ataque") | (resultado == "falla")
| (resultado == "neumonia"))) {
stop ("resultado invalido")
}
# Para cada estado, encuentra el hospital con la posición dada.
col <- if (resultado == "ataque") {
11 #columna de Heart Attack
} else if (resultado == "falla") {
17 #columna de Heart Failure
} else {
23 #columna de pneumonia
}
data[, col] <- suppressWarnings(as.numeric(levels(data[, col])[data[, col]]))
data[, 2] <- as.character(data[, 2])
resultadoFin <- vector() #Vector vacío para llenar luego
estados <- levels(data[, 7])
for(i in 1:length(estados)) {
DataEstado <- data[grep(estados[i], data$State), ]
Ordenar_Data <- DataEstado[order(DataEstado[, col], DataEstado[, 2], na.last = NA), ]
hospital <- if(num == "mejor") {
Ordenar_Data[1, 2]
} else if(num == "peor") {
Ordenar_Data[nrow(Ordenar_Data), 2]
} else{
Ordenar_Data[num, 2]
}
resultadoFin <- append(resultadoFin, c(hospital, estados[i]))
#append agrega elementos al vector que teniamos vacio al inincio
}
# Regresa un data frame con el nombre del hospital y la abreviatura
# del nombre del estado al que pertenece.
resultadoFin <- as.data.frame(matrix(resultadoFin, length(estados), 2, byrow = TRUE))
colnames(resultadoFin) <- c("hospital", "estado")
rownames(resultadoFin) <- estados
resultadoFin
}
head(rankingcompleto("ataque", 20), 10)
tail(rankingcompleto("neumonia", "peor"), 3)
head(rankingcompleto("ataque", 4), 5)
head(rankingcompleto("ataque", 20), 10)
mejor("TX", "ataque")
rankhospital("MD", "ataque", "peor")
rankhospital <- function(estado, resultado, num = "mejor") {
#Lectura de datos
data <- read.csv("outcome-of-care-measures.csv")
#Revisión de la validez de estado y resultado
estados <- levels(data[, 7])[data[, 7]] #Columna de los codigos de estado
CodigoEstado <- FALSE
for (i in 1:length(estados)) {
if (estado == estados[i]) {
CodigoEstado <- TRUE
}
}
if (!CodigoEstado) {
stop ("estado invalido")
}
if (!((resultado == "ataque") | (resultado == "falla")
| (resultado == "neumonia"))) {
stop ("resultado invalido")
}
#Regresa el nombre del hospital con el puesto dado de la tasa más
#baja de mortalidad de 30 días
col <- if (resultado == "ataque") {
11 #columna de Heart Attack
} else if (resultado == "falla") {
17 #columna de Heart Failure
} else {
23 #columna de pneumonia
}
data[, col] <- suppressWarnings(as.numeric(levels(data[, col])[data[, col]]))
data[, 2] <- as.character(data[, 2])
DataEstado <- data[grep(estado, data$State), ]
Ordenar_Data <- DataEstado[order(DataEstado[, col], DataEstado[, 2], na.last = NA), ]
if(num == "mejor") {
Ordenar_Data[1, 2]
} else if(num == "peor") {
Ordenar_Data[nrow(Ordenar_Data), 2]
} else{
Ordenar_Data[num, 2]
}
}
rankhospital("TX", "falla", 4)
rankhospital <- function(estado, resultado, num = "mejor") {
#Lectura de datos
data <- read.csv("outcome-of-care-measures.csv")
#Revisión de la validez de estado y resultado
#estados <- levels(data[, 7])[data[, 7]] #Columna de los codigos de estado
estados <- unique(data$State) #validación
if(!estado %in% estados){
stop("Invalid State:(")
}
resultados <- c("ataque", "falla", "neumonia")
if(!resultado %in% resultados){
stop("invalid outcome :(")
}
#Regresa el nombre del hospital con el puesto dado de la tasa más
#baja de mortalidad de 30 días
col <- if (resultado == "ataque") {
11 #columna de Heart Attack
} else if (resultado == "falla") {
17 #columna de Heart Failure
} else {
23 #columna de pneumonia
}
data[, col] <- suppressWarnings(as.numeric(levels(data[, col])[data[, col]]))
data[, 2] <- as.character(data[, 2])
DataEstado <- data[grep(estado, data$State), ]
Ordenar_Data <- DataEstado[order(DataEstado[, col], DataEstado[, 2], na.last = NA), ]
if(num == "mejor") {
Ordenar_Data[1, 2]
} else if(num == "peor") {
Ordenar_Data[nrow(Ordenar_Data), 2]
} else{
Ordenar_Data[num, 2]
}
}
rankhospital("MN", "ataque", 5000)
rankhospital("TXxxx", "falla", 4)
rankhospital("MD", "ataques", "peor")
mejor("TX", "ataque")
mejor("TX", "falla")
mejor <- function(estado, resultado){
#Lectura de datos
data <- read.csv("outcome-of-care-measures.csv")
estados <- unique(data$State) #validación
if(!estado %in% estados){
stop("Invalid State:(")
}
resultados <- c("ataque", "falla", "neumonia")
if(!resultado %in% resultados){
stop("invalid outcome :(")
}
x <- subset(data, State == estado) #data frame del estado seleccionado
besthospital <- if (resultado == "ataque"){
11 #columna de Heart Attack
} else if (resultado == "falla") {
17 #columna de Heart Failure
} else {
23 #columna de pneumonia
} #selección de la enfermedad
Ext <- x[which.min(x[,besthospital]), ]
Ext1 <- Ext[order(Ext$Hospital.Name), ]
hospital <- Ext1[1,2]
hospital
}
mejor("TX", "ataque")
mejor("TX", "falla")
mejor("MD", "ataque") #x
rankhospital("MN", "ataque", 5000)
mejor <- function(estado, resultado){
#Lectura de datos
data <- read.csv("outcome-of-care-measures.csv")
estados <- unique(data$State) #validación
if(!estado %in% estados){
stop("Invalid State:(")
}
resultados <- c("ataque", "falla", "neumonia")
if(!resultado %in% resultados){
stop("invalid outcome :(")
}
x <- subset(data, State == estado) #data frame del estado seleccionado
besthospital <- if (resultado == "ataque"){
11 #columna de Heart Attack
} else if (resultado == "falla") {
17 #columna de Heart Failure
} else {
23 #columna de pneumonia
} #selección de la enfermedad
Ext <- x[which.min(x[,besthospital]), ]
Ext1 <- Ext[order(Ext$Hospital.Name), ]
hospital <- Ext1[1,2]
hospital
}
mejor("TX", "ataque")
rankhospital <- function(estado, resultado, num = "mejor") {
#Lectura de datos
data <- read.csv("outcome-of-care-measures.csv")
#Validación
estados <- unique(data$State)
if(!estado %in% estados){
stop("Invalid State:(")
}
resultados <- c("ataque", "falla", "neumonia")
if(!resultado %in% resultados){
stop("invalid outcome :(")
}
col <- if (resultado == "ataque") {
11 #columna de Heart Attack
} else if (resultado == "falla") {
17 #columna de Heart Failure
} else {
23 #columna de pneumonia
}
data[, col] <- suppressWarnings(as.numeric(levels(data[, col])[data[, col]]))
data[, 2] <- as.character(data[, 2])
DataEstado <- data[grep(estado, data$State), ]
Ordenar_Data <- DataEstado[order(DataEstado[, col], DataEstado[, 2], na.last = NA), ]
if(num == "mejor") {
Ordenar_Data[1, 2]
} else if(num == "peor") {
Ordenar_Data[nrow(Ordenar_Data), 2]
} else{
Ordenar_Data[num, 2]
}
}
rankhospital("TX", "fallis", 4)
rankhospital("MD", "ataques", "peor")
rankhospital("MD", "ataque", "peor")
head(rankingcompleto("ataquez", 20), 10)
rankingcompleto <- function(resultado, num = "mejor") {
# Lectura de datos
data <- read.csv("outcome-of-care-measures.csv")
# Revisión de la validez de estado y resultado
estados <- unique(data$State)
if(!estado %in% estados){
stop("Invalid State:(")
}
resultados <- c("ataque", "falla", "neumonia")
if(!resultado %in% resultados){
stop("invalid outcome :(")
}
# Para cada estado, encuentra el hospital con la posición dada.
col <- if (resultado == "ataque") {
11 #columna de Heart Attack
} else if (resultado == "falla") {
17 #columna de Heart Failure
} else {
23 #columna de pneumonia
}
data[, col] <- suppressWarnings(as.numeric(levels(data[, col])[data[, col]]))
data[, 2] <- as.character(data[, 2])
resultadoFin <- vector() #Vector vacío para llenar luego
estados <- levels(data[, 7])
for(i in 1:length(estados)) {
DataEstado <- data[grep(estados[i], data$State), ]
Ordenar_Data <- DataEstado[order(DataEstado[, col], DataEstado[, 2], na.last = NA), ]
hospital <- if(num == "mejor") {
Ordenar_Data[1, 2]
} else if(num == "peor") {
Ordenar_Data[nrow(Ordenar_Data), 2]
} else{
Ordenar_Data[num, 2]
}
resultadoFin <- append(resultadoFin, c(hospital, estados[i]))
#append agrega elementos al vector que teniamos vacio al inincio
}
# Regresa un data frame con el nombre del hospital y la abreviatura
# del nombre del estado al que pertenece.
resultadoFin <- as.data.frame(matrix(resultadoFin, length(estados), 2, byrow = TRUE))
colnames(resultadoFin) <- c("hospital", "estado")
rownames(resultadoFin) <- estados
resultadoFin
}
head(rankingcompleto("ataquez", 20), 10)
tail(rankingcompleto("fallabhbbuj"), 10)
rankhospital <- function(estado, resultado, num = "mejor") {
#Lectura de datos
data <- read.csv("outcome-of-care-measures.csv")
#Validación
estados <- unique(data$State)
if(!estado %in% estados){
stop("Invalid State:(")
}
resultados <- c("ataque", "falla", "neumonia")
if(!resultado %in% resultados){
stop("invalid outcome :(")
}
col <- if (resultado == "ataque") {
11 #columna de Heart Attack
} else if (resultado == "falla") {
17 #columna de Heart Failure
} else {
23 #columna de pneumonia
}
data[, col] <- suppressWarnings(as.numeric(levels(data[, col])[data[, col]]))
data[, 2] <- as.character(data[, 2])
DataEstado <- data[grep(estado, data$State), ]
Ordenar_Data <- DataEstado[order(DataEstado[, col], DataEstado[, 2], na.last = NA), ]
if(num == "mejor") {
Ordenar_Data[1, 2]
} else if(num == "peor") {
Ordenar_Data[nrow(Ordenar_Data), 2]
} else{
Ordenar_Data[num, 2]
}
}
rankhospital("TX", "fallis", 4)
rankingcompleto <- function(resultado, num = "mejor") {
# Lectura de datos
data <- read.csv("outcome-of-care-measures.csv")
# Validación
resultados <- c("ataque", "falla", "neumonia")
if(!resultado %in% resultados){
stop("invalid outcome :(")
}
# Para cada estado, encuentra el hospital con la posición dada.
col <- if (resultado == "ataque") {
11 #columna de Heart Attack
} else if (resultado == "falla") {
17 #columna de Heart Failure
} else {
23 #columna de pneumonia
}
data[, col] <- suppressWarnings(as.numeric(levels(data[, col])[data[, col]]))
data[, 2] <- as.character(data[, 2])
resultadoFin <- vector() #Vector vacío para llenar luego
estados <- levels(data[, 7])
for(i in 1:length(estados)) {
DataEstado <- data[grep(estados[i], data$State), ]
Ordenar_Data <- DataEstado[order(DataEstado[, col], DataEstado[, 2], na.last = NA), ]
hospital <- if(num == "mejor") {
Ordenar_Data[1, 2]
} else if(num == "peor") {
Ordenar_Data[nrow(Ordenar_Data), 2]
} else{
Ordenar_Data[num, 2]
}
resultadoFin <- append(resultadoFin, c(hospital, estados[i]))
#append agrega elementos al vector que teniamos vacio al inincio
}
# Regresa un data frame con el nombre del hospital y la abreviatura
# del nombre del estado al que pertenece.
resultadoFin <- as.data.frame(matrix(resultadoFin, length(estados), 2, byrow = TRUE))
colnames(resultadoFin) <- c("hospital", "estado")
rownames(resultadoFin) <- estados
resultadoFin
}
head(rankingcompleto("ataquez", 20), 10)
rankhospital("TX", "fallis", 4)
rankingcompleto <- function(resultado, num = "mejor") {
# Lectura de datos
data <- read.csv("outcome-of-care-measures.csv")
# Validación
resultados <- c("ataque", "falla", "neumonia")
if(!resultado %in% resultados){
stop("invalid outcome :(")
}
# Para cada estado, encuentra el hospital con la posición dada.
col <- if (resultado == "ataque") {
11 #columna de Heart Attack
} else if (resultado == "falla") {
17 #columna de Heart Failure
} else {
23 #columna de pneumonia
}
data[, col] <- suppressWarnings(as.numeric(levels(data[, col])[data[, col]]))
data[, 2] <- as.character(data[, 2])
resultadoFin <- vector() #Vector vacío para llenar luego
estados <- levels(data[, 7])
for(i in 1:length(estados)) {
DataEstado <- data[grep(estados[i], data$State), ]
Ordenar_Data <- DataEstado[order(DataEstado[, col], DataEstado[, 2], na.last = NA), ]
hospital <- if(num == "mejor") {
Ordenar_Data[1, 2]
} else if(num == "peor") {
Ordenar_Data[nrow(Ordenar_Data), 2]
} else{
Ordenar_Data[num, 2]
}
resultadoFin <- append(resultadoFin, c(hospital, estados[i]))
#append agrega elementos al vector que teniamos vacio al inincio
}
# Regresa un data frame con el nombre del hospital y la abreviatura
# del nombre del estado al que pertenece.
resultadoFin <- as.data.frame(matrix(resultadoFin, length(estados), 2, byrow = TRUE))
colnames(resultadoFin) <- c("hospital", "estado")
rownames(resultadoFin) <- estados
resultadoFin
}
rankingcompleto <- function(resultado, num = "mejor") {
# Lectura de datos
data <- read.csv("outcome-of-care-measures.csv")
# Validación
resultados <- c("ataque", "falla", "neumonia")
if(!resultado %in% resultados){
stop("invalid outcome :(")
}
# Para cada estado, encuentra el hospital con la posición dada.
col <- if (resultado == "ataque") {
11 #columna de Heart Attack
} else if (resultado == "falla") {
17 #columna de Heart Failure
} else {
23 #columna de pneumonia
}
data[, col] <- suppressWarnings(as.numeric(levels(data[, col])[data[, col]]))
data[, 2] <- as.character(data[, 2])
resultadoFin <- vector() #Vector vacío para llenar luego
estados <- levels(data[, 7])
for(i in 1:length(estados)) {
DataEstado <- data[grep(estados[i], data$State), ]
Ordenar_Data <- DataEstado[order(DataEstado[, col], DataEstado[, 2], na.last = NA), ]
hospital <- if(num == "mejor") {
Ordenar_Data[1, 2]
} else if(num == "peor") {
Ordenar_Data[nrow(Ordenar_Data), 2]
} else{
Ordenar_Data[num, 2]
}
resultadoFin <- append(resultadoFin, c(hospital, estados[i]))
#append agrega elementos al vector que teniamos vacio al inincio
}
# Regresa un data frame con el nombre del hospital y la abreviatura
# del nombre del estado al que pertenece.
resultadoFin <- as.data.frame(matrix(resultadoFin, length(estados), 2, byrow = TRUE))
colnames(resultadoFin) <- c("hospital", "estado")
rownames(resultadoFin) <- estados
resultadoFin
}
head(rankingcompleto("ataquez", 20), 10)
tail(rankingcompleto("neumonia", "peorsss"), 3)
tail(rankingcompleto("neumonia", "peorsss"), 3)
rankingcompleto <- function(resultado, num = "mejor") {
# Lectura de datos
data <- read.csv("outcome-of-care-measures.csv")
# Validación
resultados <- c("ataque", "falla", "neumonia")
if(!resultado %in% resultados){
stop("invalid outcome :(")
}
# Para cada estado, encuentra el hospital con la posición dada.
col <- if (resultado == "ataque") {
11 #columna de Heart Attack
} else if (resultado == "falla") {
17 #columna de Heart Failure
} else {
23 #columna de pneumonia
}
data[, col] <- suppressWarnings(as.numeric(levels(data[, col])[data[, col]]))
data[, 2] <- as.character(data[, 2])
resultadoFin <- vector() #Vector vacío para llenar luego
estados <- levels(data[, 7])
for(i in 1:length(estados)) {
DataEstado <- data[grep(estados[i], data$State), ]
Ordenar_Data <- DataEstado[order(DataEstado[, col], DataEstado[, 2], na.last = NA), ]
hospital <- if(num == "mejor") {
Ordenar_Data[1, 2]
} else if(num == "peor") {
Ordenar_Data[nrow(Ordenar_Data), 2]
} else{
Ordenar_Data[num, 2]
}
resultadoFin <- append(resultadoFin, c(hospital, estados[i]))
#append agrega elementos al vector que teniamos vacio al inincio
}
# Regresa un data frame con el nombre del hospital y la abreviatura
# del nombre del estado al que pertenece.
resultadoFin <- as.data.frame(matrix(resultadoFin, length(estados), 2, byrow = TRUE))
colnames(resultadoFin) <- c("hospital", "estado")
rownames(resultadoFin) <- estados
resultadoFin
}
tail(rankingcompleto("neumonia", "peor"), 3)
head(rankingcompleto("ataquez", 20), 10)
head(rankingcompleto("ataque", 20), 10)
